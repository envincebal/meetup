{"version":3,"sources":["Event.js","EventList.js","NumberOfEvents.js","mock-events.js","api.js","CitySearch.js","App.js","serviceWorker.js","index.js"],"names":["Event","props","handleShowDetails","state","showDetails","setState","event","this","className","local_time","local_date","name","group","yes_rsvp_count","onClick","Component","EventList","events","map","key","id","NumberOfEvents","handleInputChanged","number","target","value","numberInput","updateEvents","type","onChange","mockEvents","city","lat","lon","country","zip","member_count","created","duration","rsvp_limit","date_in_series_pattern","status","time","updated","utc_offset","waitlist_count","venue","repinned","address_1","localized_country_name","join_mode","urlname","who","localized_location","region","timezone","link","description","visibility","member_pay_fee","getEvents","page","a","async","window","location","href","startsWith","getAccessToken","token","url","axios","get","result","data","accessToken","localStorage","getItem","code","URLSearchParams","search","tokenInfo","setItem","access_token","refresh_token","Date","now","getOrRenewAccessToken","lastSavedTime","CitySearch","query","name_string","getSuggestions","then","suggestions","handleItemClicked","item","App","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3093f491.chunk.js","sourcesContent":["import React, {Component} from \"react\";\n\nclass Event extends Component{\n  constructor(props){\n    super(props);\n\n    this.state = {\n      showDetails: false\n    }\n  }\n\n  handleShowDetails = () => {\n    if(!this.state.showDetails){\n      this.setState({ showDetails: true });\n    }else{\n      this.setState({showDetails: false});\n    }\n  }\n\n  render(){\n    const {event} = this.props;\n    return (\n      <div className=\"event\">\n        <p>{event.local_time + \" - \" + event.local_date}</p>\n        <p className=\"event-name\">{event.name}</p>\n        <p>{\"Group: \" + event.group.name}</p>\n        <p className=\"event-count\">{event.yes_rsvp_count} people are going</p>\n        \n        <div className=\"event-details\">\n\n        </div>\n        <button onClick={this.handleShowDetails} className=\"show-details\">Details</button>\n      </div>\n    );\n  }\n}\n\nexport default Event;","import React, {Component} from \"react\";\nimport Event from \"./Event\";\nclass EventList extends Component{\n\n  render(){\n    return (\n      <ul className=\"EventList\">\n        {this.props.events.map(event => \n        <li key={event.id}>\n          <Event event={event} />\n        </li>\n        )}\n      </ul>\n    );\n  }\n}\n\nexport default EventList;","import React, {Component} from 'react';\n\nclass NumberOfEvents extends Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      numberInput: 32\n    }\n  }\n\n  handleInputChanged = (event) => {\n    const number = event.target.value;\n    this.setState({numberInput: number});\n    this.props.updateEvents(null, null, number);\n  }\n\n  render(){\n    return (\n      <div className=\"number-of-events\">\n        <span className=\"numbers-label\">Number of Events: </span>\n        <input\n        className=\"number\" \n        type=\"number\"\n        value={this.state.numberInput}\n        onChange={this.handleInputChanged} />\n      </div>\n    )\n  }\n}\n\nexport default NumberOfEvents;","const mockEvents = {\r\n  city: {\r\n    id: 1007700,\r\n    city: \"MÃ¼nchen\",\r\n    lat: 48.14,\r\n    lon: 11.58,\r\n    state: \"\",\r\n    country: \"de\",\r\n    zip: \"meetup3\",\r\n    member_count: 1257\r\n  },\r\n  events:[\r\n    {\r\n      created: 1563825339000,\r\n      duration: 9000000,\r\n      id: \"263370107\",\r\n      name: \"Microservices mit dem MicroProfile 3.x\",\r\n      rsvp_limit: 80,\r\n      date_in_series_pattern: false,\r\n      status: \"upcoming\",\r\n      time: 1566925200000,\r\n      local_date: \"2019-09-26\",\r\n      local_time: \"19:00\",\r\n      updated: 1563825339000,\r\n      utc_offset: 7200000,\r\n      waitlist_count: 79,\r\n      yes_rsvp_count: 80,\r\n      venue: {\r\n      id: 26266792,\r\n      name: \"adesso AG\",\r\n      lat: 53.54524230957031,\r\n      lon: 9.950983047485352,\r\n      repinned: false,\r\n      address_1: \"GroÃe ElbstraÃe 36\",\r\n      city: \"Hamburg\",\r\n      country: \"de\",\r\n      localized_country_name: \"Deutschland\"\r\n      },\r\n      group: {\r\n      created: 1387402147000,\r\n      name: \"Java User Group Hamburg\",\r\n      id: 11500362,\r\n      join_mode: \"open\",\r\n      lat: 53.54999923706055,\r\n      lon: 10,\r\n      urlname: \"jug-hamburg\",\r\n      who: \"Mitglieder\",\r\n      localized_location: \"Hamburg, Deutschland\",\r\n      state: \"\",\r\n      country: \"de\",\r\n      region: \"de_DE\",\r\n      timezone: \"Europe/Berlin\"\r\n      },\r\n      link: \"https://www.meetup.com/de-DE/jug-hamburg/events/263370107/\",\r\n      description: \"<p>Wer Microservices in Java entwickeln mÃ¶chte, muss nicht zwangslÃ¤ufig zu Spring Boot greifen. Es lohnt ein Blick auf alternative Frameworks, die in zunehmender Anzahl verfÃ¼gbar sind und bezÃ¼glich ihrer FunktionalitÃ¤t stark aufholen. So schreitet auch die Entwicklung des MicroProfiles weiter voran. In beeindruckender Geschwindigkeit wurden zahlreiche APIs entwickelt, die (nicht nur) fÃ¼r die Entwicklung von Microservices sehr hilfreich sind.<br/>Hierzu zÃ¤hlen die UnterstÃ¼tzung von Metriken, Health Checks, Fault Tolerance und JSON Web Tokens. FÃ¼r den Einsatz im Projekt kann aus unterschiedlichen Implementierungen wie TomEE, Thorntail oder OpenLiberty gewÃ¤hlt werden. In dieser Live-Coding-Session wird der praktische Einsatz von MicroProfile anhand eines Praxisbeispiels demonstriert.<br/> <br/> <br/>Referent:<br/>Thilo Frotscher arbeitet als freiberuflicher Softwarearchitekt und Trainer. Als Experte fÃ¼r Enterprise Java und Systemintegration unterstÃ¼tzt er seine Kunden Ã¼berwiegend durch Entwicklung, Reviews oder die DurchfÃ¼hrung von Schulungen. Thilo ist (Co-)Autor mehrerer BÃ¼cher in den Bereichen Java EE, (Web) Services und Systemintegration, hat zahlreiche Fachartikel verfasst und spricht regelmÃ¤Ãig auf Fachkonferenzen und Schulungsveranstaltungen oder bei Java User Groups.</p> \",\r\n      visibility: \"public\",\r\n      member_pay_fee: false\r\n    },\r\n    {\r\n      created: 1563825339000,\r\n      duration: 9000000,\r\n      id: \"263370107\",\r\n      name: \"Microservices mit dem MicroProfile 3.x\",\r\n      rsvp_limit: 80,\r\n      date_in_series_pattern: false,\r\n      status: \"upcoming\",\r\n      time: 1566925200000,\r\n      local_date: \"2019-09-27\",\r\n      local_time: \"19:00\",\r\n      updated: 1563825339000,\r\n      utc_offset: 7200000,\r\n      waitlist_count: 79,\r\n      yes_rsvp_count: 80,\r\n      venue: {\r\n      id: 26266792,\r\n      name: \"adesso AG\",\r\n      lat: 53.54524230957031,\r\n      lon: 9.950983047485352,\r\n      repinned: false,\r\n      address_1: \"GroÃe ElbstraÃe 36\",\r\n      city: \"Hamburg\",\r\n      country: \"de\",\r\n      localized_country_name: \"Deutschland\"\r\n      },\r\n      group: {\r\n      created: 1387402147000,\r\n      name: \"Java User Group Hamburg\",\r\n      id: 11500362,\r\n      join_mode: \"open\",\r\n      lat: 53.54999923706055,\r\n      lon: 10,\r\n      urlname: \"jug-hamburg\",\r\n      who: \"Mitglieder\",\r\n      localized_location: \"Hamburg, Deutschland\",\r\n      state: \"\",\r\n      country: \"de\",\r\n      region: \"de_DE\",\r\n      timezone: \"Europe/Berlin\"\r\n      },\r\n      link: \"https://www.meetup.com/de-DE/jug-hamburg/events/263370107/\",\r\n      description: \"<p>Wer Microservices in Java entwickeln mÃ¶chte, muss nicht zwangslÃ¤ufig zu Spring Boot greifen. Es lohnt ein Blick auf alternative Frameworks, die in zunehmender Anzahl verfÃ¼gbar sind und bezÃ¼glich ihrer FunktionalitÃ¤t stark aufholen. So schreitet auch die Entwicklung des MicroProfiles weiter voran. In beeindruckender Geschwindigkeit wurden zahlreiche APIs entwickelt, die (nicht nur) fÃ¼r die Entwicklung von Microservices sehr hilfreich sind.<br/>Hierzu zÃ¤hlen die UnterstÃ¼tzung von Metriken, Health Checks, Fault Tolerance und JSON Web Tokens. FÃ¼r den Einsatz im Projekt kann aus unterschiedlichen Implementierungen wie TomEE, Thorntail oder OpenLiberty gewÃ¤hlt werden. In dieser Live-Coding-Session wird der praktische Einsatz von MicroProfile anhand eines Praxisbeispiels demonstriert.<br/> <br/> <br/>Referent:<br/>Thilo Frotscher arbeitet als freiberuflicher Softwarearchitekt und Trainer. Als Experte fÃ¼r Enterprise Java und Systemintegration unterstÃ¼tzt er seine Kunden Ã¼berwiegend durch Entwicklung, Reviews oder die DurchfÃ¼hrung von Schulungen. Thilo ist (Co-)Autor mehrerer BÃ¼cher in den Bereichen Java EE, (Web) Services und Systemintegration, hat zahlreiche Fachartikel verfasst und spricht regelmÃ¤Ãig auf Fachkonferenzen und Schulungsveranstaltungen oder bei Java User Groups.</p> \",\r\n      visibility: \"public\",\r\n      member_pay_fee: false\r\n    },\r\n    {\r\n      created: 1563825339000,\r\n      duration: 9000000,\r\n      id: \"263370107\",\r\n      name: \"Microservices mit dem MicroProfile 3.x\",\r\n      rsvp_limit: 80,\r\n      date_in_series_pattern: false,\r\n      status: \"upcoming\",\r\n      time: 1566925200000,\r\n      local_date: \"2019-09-28\",\r\n      local_time: \"19:00\",\r\n      updated: 1563825339000,\r\n      utc_offset: 7200000,\r\n      waitlist_count: 79,\r\n      yes_rsvp_count: 80,\r\n      venue: {\r\n      id: 26266792,\r\n      name: \"adesso AG\",\r\n      lat: 53.54524230957031,\r\n      lon: 9.950983047485352,\r\n      repinned: false,\r\n      address_1: \"GroÃe ElbstraÃe 36\",\r\n      city: \"Hamburg\",\r\n      country: \"de\",\r\n      localized_country_name: \"Deutschland\"\r\n      },\r\n      group: {\r\n      created: 1387402147000,\r\n      name: \"Java User Group Hamburg\",\r\n      id: 11500362,\r\n      join_mode: \"open\",\r\n      lat: 53.54999923706055,\r\n      lon: 10,\r\n      urlname: \"jug-hamburg\",\r\n      who: \"Mitglieder\",\r\n      localized_location: \"Hamburg, Deutschland\",\r\n      state: \"\",\r\n      country: \"de\",\r\n      region: \"de_DE\",\r\n      timezone: \"Europe/Berlin\"\r\n      },\r\n      link: \"https://www.meetup.com/de-DE/jug-hamburg/events/263370107/\",\r\n      description: \"<p>Wer Microservices in Java entwickeln mÃ¶chte, muss nicht zwangslÃ¤ufig zu Spring Boot greifen. Es lohnt ein Blick auf alternative Frameworks, die in zunehmender Anzahl verfÃ¼gbar sind und bezÃ¼glich ihrer FunktionalitÃ¤t stark aufholen. So schreitet auch die Entwicklung des MicroProfiles weiter voran. In beeindruckender Geschwindigkeit wurden zahlreiche APIs entwickelt, die (nicht nur) fÃ¼r die Entwicklung von Microservices sehr hilfreich sind.<br/>Hierzu zÃ¤hlen die UnterstÃ¼tzung von Metriken, Health Checks, Fault Tolerance und JSON Web Tokens. FÃ¼r den Einsatz im Projekt kann aus unterschiedlichen Implementierungen wie TomEE, Thorntail oder OpenLiberty gewÃ¤hlt werden. In dieser Live-Coding-Session wird der praktische Einsatz von MicroProfile anhand eines Praxisbeispiels demonstriert.<br/> <br/> <br/>Referent:<br/>Thilo Frotscher arbeitet als freiberuflicher Softwarearchitekt und Trainer. Als Experte fÃ¼r Enterprise Java und Systemintegration unterstÃ¼tzt er seine Kunden Ã¼berwiegend durch Entwicklung, Reviews oder die DurchfÃ¼hrung von Schulungen. Thilo ist (Co-)Autor mehrerer BÃ¼cher in den Bereichen Java EE, (Web) Services und Systemintegration, hat zahlreiche Fachartikel verfasst und spricht regelmÃ¤Ãig auf Fachkonferenzen und Schulungsveranstaltungen oder bei Java User Groups.</p> \",\r\n      visibility: \"public\",\r\n      member_pay_fee: false\r\n    },\r\n    {\r\n      created: 1563825339000,\r\n      duration: 9000000,\r\n      id: \"263370107\",\r\n      name: \"Microservices mit dem MicroProfile 3.x\",\r\n      rsvp_limit: 80,\r\n      date_in_series_pattern: false,\r\n      status: \"upcoming\",\r\n      time: 1566925200000,\r\n      local_date: \"2019-09-28\",\r\n      local_time: \"19:00\",\r\n      updated: 1563825339000,\r\n      utc_offset: 7200000,\r\n      waitlist_count: 79,\r\n      yes_rsvp_count: 80,\r\n      venue: {\r\n      id: 26266792,\r\n      name: \"adesso AG\",\r\n      lat: 53.54524230957031,\r\n      lon: 9.950983047485352,\r\n      repinned: false,\r\n      address_1: \"GroÃe ElbstraÃe 36\",\r\n      city: \"Hamburg\",\r\n      country: \"de\",\r\n      localized_country_name: \"Deutschland\"\r\n      },\r\n      group: {\r\n      created: 1387402147000,\r\n      name: \"Java User Group Hamburg\",\r\n      id: 11500362,\r\n      join_mode: \"open\",\r\n      lat: 53.54999923706055,\r\n      lon: 10,\r\n      urlname: \"jug-hamburg\",\r\n      who: \"Mitglieder\",\r\n      localized_location: \"Hamburg, Deutschland\",\r\n      state: \"\",\r\n      country: \"de\",\r\n      region: \"de_DE\",\r\n      timezone: \"Europe/Berlin\"\r\n      },\r\n      link: \"https://www.meetup.com/de-DE/jug-hamburg/events/263370107/\",\r\n      description: \"<p>Wer Microservices in Java entwickeln mÃ¶chte, muss nicht zwangslÃ¤ufig zu Spring Boot greifen. Es lohnt ein Blick auf alternative Frameworks, die in zunehmender Anzahl verfÃ¼gbar sind und bezÃ¼glich ihrer FunktionalitÃ¤t stark aufholen. So schreitet auch die Entwicklung des MicroProfiles weiter voran. In beeindruckender Geschwindigkeit wurden zahlreiche APIs entwickelt, die (nicht nur) fÃ¼r die Entwicklung von Microservices sehr hilfreich sind.<br/>Hierzu zÃ¤hlen die UnterstÃ¼tzung von Metriken, Health Checks, Fault Tolerance und JSON Web Tokens. FÃ¼r den Einsatz im Projekt kann aus unterschiedlichen Implementierungen wie TomEE, Thorntail oder OpenLiberty gewÃ¤hlt werden. In dieser Live-Coding-Session wird der praktische Einsatz von MicroProfile anhand eines Praxisbeispiels demonstriert.<br/> <br/> <br/>Referent:<br/>Thilo Frotscher arbeitet als freiberuflicher Softwarearchitekt und Trainer. Als Experte fÃ¼r Enterprise Java und Systemintegration unterstÃ¼tzt er seine Kunden Ã¼berwiegend durch Entwicklung, Reviews oder die DurchfÃ¼hrung von Schulungen. Thilo ist (Co-)Autor mehrerer BÃ¼cher in den Bereichen Java EE, (Web) Services und Systemintegration, hat zahlreiche Fachartikel verfasst und spricht regelmÃ¤Ãig auf Fachkonferenzen und Schulungsveranstaltungen oder bei Java User Groups.</p> \",\r\n      visibility: \"public\",\r\n      member_pay_fee: false\r\n    }\r\n  ]\r\n};\r\n\r\nexport {mockEvents};","import {\r\n  mockEvents\r\n} from './mock-events';\r\nimport axios from \"axios\";\r\n\r\nasync function getSuggestions(query) {\r\n  if (window.location.href.startsWith('http://localhost')) {\r\n    return [{\r\n        city: 'Munich',\r\n        country: 'de',\r\n        localized_country_name: 'Germany',\r\n        name_string: 'Munich, Germany',\r\n        zip: 'meetup3',\r\n        lat: 48.14,\r\n        lon: 11.58\r\n      },\r\n      {\r\n        city: 'Munich',\r\n        country: 'us',\r\n        localized_country_name: 'USA',\r\n        state: 'ND',\r\n        name_string: 'Munich, North Dakota, USA',\r\n        zip: '58352',\r\n        lat: 48.66,\r\n        lon: -98.85\r\n      }\r\n    ];\r\n  }\r\n\r\n  const token = await getAccessToken();\r\n\r\n  if(token){\r\n    const url = \"https://api.meetup.com/find/locations?&sign=true&photo-host=public&query=\" + query + \"&access_token=\" + token;\r\n    const result = await axios.get(url);\r\n    return result.data;\r\n  }\r\n  return [];\r\n}\r\n\r\nasync function getEvents(lat, lon, page) {\r\n  if (window.location.href.startsWith('http://localhost')) {\r\n    return mockEvents.events;\r\n  }\r\n\r\n  const token = await getAccessToken();\r\n  \r\n  if (token) {\r\n    let url = \"https://api.meetup.com/find/upcoming_events?&sign=true&photo-host=public&access_token=\" + token;\r\n\r\n  if (lat && lon){\r\n    url += \"&lat=\" + lat + \"&lon=\" + lon;\r\n  }\r\n\r\n  if (page) {\r\n    url += \"&page=\" + page;\r\n  }\r\n\r\n  if (lat && lon && page) {\r\n    url += \"&lat=\" + lat + \"&lon=\" + lon + \"&page=\" + page;\r\n  }\r\n\r\n  const result = await axios.get(url);\r\n  return result.data.events;\r\n  }\r\n}\r\n\r\nfunction getAccessToken() {\r\n  const accessToken = localStorage.getItem(\"access_token\");\r\n\r\n  if (!accessToken) {\r\n    const searchParams = new URLSearchParams(window.location.search);\r\n    const code = searchParams.get(\"code\");\r\n\r\n    if (!code) {\r\n      window.location.href = \"https://secure.meetup.com/oauth2/authorize?client_id=vg5u9rql438ddl39c9dls308rt&response_type=code&redirect_uri=https://envincebal.github.io/meetup/\";\r\n      return null;\r\n    }\r\n    return getOrRenewAccessToken(\"get\", code);\r\n  }\r\n\r\n  const lastSavedTime = localStorage.getItem(\"last_saved_time\");\r\n\r\n  if (accessToken && (Date.now() - lastSavedTime < 3600000)) {\r\n    return accessToken\r\n  }\r\n}\r\n\r\nasync function getOrRenewAccessToken(type, key) {\r\n  let url;\r\n\r\n  if (type === \"get\") {\r\n    url = \"https://onx76mwsx0.execute-api.us-west-2.amazonaws.com/dev/api/token/\" + key;\r\n  } else if (type === \"renew\") {\r\n    url = \"https://onx76mwsx0.execute-api.us-west-2.amazonaws.com/dev/api/refresh/\" + key;\r\n  }\r\n\r\n  const tokenInfo = await axios.get(url);\r\n\r\n  localStorage.setItem(\"access_token\", tokenInfo.data.access_token);\r\n  localStorage.setItem(\"refresh_token\", tokenInfo.data.refresh_token);\r\n  localStorage.setItem(\"last_saved_time\", Date.now());\r\n\r\n  return tokenInfo.data.access_token;\r\n}\r\n\r\nexport { getSuggestions, getEvents, \r\n  getAccessToken }; ","import React, {Component} from 'react';\nimport { getSuggestions } from './api';\n\nclass CitySearch extends Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      query: \"\",\n      suggestions: []\n    }\n  }\n\n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    this.setState({query: value});\n    getSuggestions(value)\n    .then(suggestions =>{ \n      this.setState({ suggestions })\n    });\n  }\n\n  handleItemClicked = (value, lat, lon) => {\n    this.setState({ query: value, suggestions: [] });\n    this.props.updateEvents(lat, lon);\n  }\n\n  render(){\n    return (\n      <div className=\"city-search\">\n        <input \n          type=\"text\" \n          className=\"city\"\n          value={this.state.query}\n          onChange={this.handleInputChanged} \n        />\n        <ul className=\"suggestions\">\n          {this.state.suggestions.map(item => \n            <li \n              key={item.name_string}\n              onClick={() => this.handleItemClicked(item.name_string, item.lat, item.lon)}>{item.name_string}\n            </li>  \n          )}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default CitySearch;","import React, {Component} from 'react';\nimport './App.css';\nimport EventList from \"./EventList\";\nimport NumberOfEvents from './NumberOfEvents';\nimport CitySearch from \"./CitySearch\";\nimport {getEvents} from './api';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      events: [],\n      lat: null,\n      lon: null,\n      page: null\n    }\n  }\n\n  componentDidMount() {\n    this.updateEvents();\n  }\n\n  updateEvents = (lat, lon, page) => {\n    if (lat && lon) {\n      getEvents(lat, lon, this.state.page).then(events => {\n        this.setState({events, lat, lon})\n      })\n    } else if (page) {\n      getEvents(this.state.lat, this.state.lon, page).then(events => {\n        this.setState({events, page})\n      })\n\n    } else {\n      getEvents(this.state.lat, this.state.lon, this.state.page).then(events => this.setState({events}));\n    }\n\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <CitySearch updateEvents={this.updateEvents}/>\n        <NumberOfEvents updateEvents={this.updateEvents}/>\n        <EventList events={this.state.events}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}